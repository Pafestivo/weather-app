(()=>{"use strict";async function e(e,i){const m=`https://api.openweathermap.org/data/2.5/weather?q=${e}&units=${i}&APPID=80b5e34940d5d647c671753b685314a7`,o=await fetch(m,{mode:"cors"}),s=await o.json();try{console.log(s),o.url.includes("metric")?n(t(s,"metric")):n(t(s,"imperial"))}catch{!function(e){console.log(`Error: ${e.message}`)}(s)}}function t(e,t){let n,m;"metric"===t?(n="C",m="(M/S)"):(n="F",m="(M/H)");const o=e.name,s=e.weather[0].description,c=`${e.main.temp}${n}`,d=`${e.main.humidity}%`,a=`${e.main.temp_min}${n}`,l=`${e.main.temp_max}${n}`,u=`${e.wind.speed}${m}`,r=`${e.clouds.all}%`;let y=`${e.visibility}(K/M)`,$="-",g="-",p="-";const w=i(e.timezone),E=i(e.timezone,e.sys.sunrise),x=i(e.timezone,e.sys.sunset);return 1e4===e.visibility&&(y="excellent"),e.sys.country&&($=e.sys.country),e.snow&&(p=e.snow["1h"]),e.rain&&(g=e.rain["1h"]),{name:o,country:$,localTime:w,sunrise:E,sunset:x,weather:s,temp:c,humidity:d,minTemp:a,maxTemp:l,visibility:y,windSpeed:u,clouds:r,rain:g,snow:p}}function n(e){const t=document.getElementById("name"),n=document.getElementById("localTime"),i=document.getElementById("sunrise"),m=document.getElementById("sunset"),o=document.getElementById("weather"),s=document.getElementById("temp"),c=document.getElementById("humidity"),d=document.getElementById("minTemp"),a=document.getElementById("maxTemp"),l=document.getElementById("visibility"),u=document.getElementById("windSpeed"),r=document.getElementById("clouds"),y=document.getElementById("rain"),$=document.getElementById("snow");t.textContent=`City Name: ${e.name} (${e.country})`,n.textContent=`Local Time: ${e.localTime}`,i.textContent=`Sunrise: ${e.sunrise}`,m.textContent=`Sunset: ${e.sunset}`,o.textContent=`Weather: ${e.weather}`,s.textContent=`Temperature: ${e.temp}`,a.textContent=`Highest: ${e.maxTemp}`,d.textContent=`Lowest: ${e.minTemp}`,c.textContent=`Humidity: ${e.humidity}`,l.textContent=`Visibility: ${e.visibility}`,u.textContent=`Wind Speed: ${e.windSpeed}`,r.textContent=`Clouds: ${e.clouds}`,y.textContent=`Rain: ${e.rain}`,$.textContent=`Snow: ${e.snow}`}function i(e,t){let n;n=t?new Date(1e3*t).getTime():(new Date).getTime();const i=6e4*(new Date).getTimezoneOffset(),m=new Date(i+n+1e3*e),o=`0${m.getHours()}`,s=`0${m.getMinutes()}`;return`${o.slice(-2)}:${s.slice(-2)}`}let m="metric";e("ukraine",m);const o=document.getElementById("location"),s=document.getElementById("search"),c=document.getElementById("changeUnits"),d=document.getElementById("name");s.addEventListener("click",(()=>{e(o.value,m)})),c.addEventListener("click",(()=>{m="metric"===m?"imperial":"metric",e(d.textContent.split(" (")[0].replace("City Name: ",""),m)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,