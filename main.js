(()=>{"use strict";async function e(e){const n=`https://api.openweathermap.org/data/2.5/weather?q=${e}&units=metric&APPID=80b5e34940d5d647c671753b685314a7`,i=await fetch(n,{mode:"cors"}),o=await i.json();try{console.log(o),console.log(t(o)),function(e){const t=document.getElementById("name"),n=document.getElementById("localTime"),i=document.getElementById("sunrise"),o=document.getElementById("sunset"),m=document.getElementById("weather"),s=document.getElementById("temp"),d=document.getElementById("humidity"),c=document.getElementById("minTemp"),a=document.getElementById("maxTemp"),u=document.getElementById("visibility"),l=document.getElementById("windSpeed"),r=document.getElementById("clouds"),y=document.getElementById("rain"),g=document.getElementById("snow");t.textContent=`City Name: ${e.name} (${e.country})`,n.textContent=`Local Time: ${e.localTime}`,i.textContent=`Sunrise: ${e.sunrise}`,o.textContent=`Sunset: ${e.sunset}`,m.textContent=`Weather: ${e.weather}`,s.textContent=`Temperature: ${e.temp}`,a.textContent=`Highest: ${e.maxTemp}`,c.textContent=`Lowest: ${e.minTemp}`,d.textContent=`Humidity: ${e.humidity}`,u.textContent=`Visibility: ${e.visibility}`,l.textContent=`Wind Speed: ${e.windSpeed}`,r.textContent=`Clouds: ${e.clouds}`,y.textContent=`Rain: ${e.rain}`,g.textContent=`Snow: ${e.snow}`}(t(o))}catch{!function(e){console.log(`Error: ${e.message}`)}(o)}}function t(e){const t=e.name,i=e.sys.country,o=e.weather[0].description,m=`${e.main.temp}C`,s=`${e.main.humidity}%`,d=`${e.main.temp_min}C`,c=`${e.main.temp_max}C`,a=`${e.wind.speed}(M/S)`,u=`${e.clouds.all}%`;let l=`${e.visibility}(K/M)`,r="-",y="-";const g=n(e.timezone),$=n(e.timezone,e.sys.sunrise),p=n(e.timezone,e.sys.sunset);return 1e4===e.visibility&&(l="good"),e.snow&&(y=e.snow["1h"]),e.rain&&(r=e.rain["1h"]),{name:t,country:i,localTime:g,sunrise:$,sunset:p,weather:o,temp:m,humidity:s,minTemp:d,maxTemp:c,visibility:l,windSpeed:a,clouds:u,rain:r,snow:y}}function n(e,t){let n;n=t?new Date(1e3*t).getTime():(new Date).getTime();const i=6e4*(new Date).getTimezoneOffset(),o=new Date(i+n+1e3*e),m=`0${o.getHours()}`,s=`0${o.getMinutes()}`;return`${m.slice(-2)}:${s.slice(-2)}`}e("ukraine");const i=document.getElementById("location");document.getElementById("search").addEventListener("click",(()=>{e(i.value)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ckksQ0FrQ0EsU0FBU2MsRUFBbUJDLEVBQVVDLEdBQ3BDLElBQUk1QixFQUNLQSxFQUFONEIsRUFBa0IsSUFBSUMsS0FBWSxJQUFQRCxHQUFhRSxXQUMxQixJQUFJRCxNQUFPQyxVQUU1QixNQUFNQyxFQUErQyxLQUFqQyxJQUFJRixNQUFPRyxvQkFJekJDLEVBQVcsSUFBSUosS0FIRUUsRUFBYy9CLEVBQ0QsSUFBTzJCLEdBR3JDTyxFQUFTLElBQUdELEVBQVNFLGFBQ3JCQyxFQUFXLElBQUdILEVBQVNJLGVBQzdCLE1BQVEsR0FBRUgsRUFBTUksT0FBTyxNQUFNRixFQUFRRSxPQUFPLElBQzlDLENDckZBckQsRUFBUSxXQUVSLE1BQU1zRCxFQUFnQnpDLFNBQVNDLGVBQWUsWUFDdkJELFNBQVNDLGVBQWUsVUFFaEN5QyxpQkFBaUIsU0FBUyxLQUN2Q3ZELEVBQVFzRCxFQUFjRSxNQUFNLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zY3JpcHRzL0FQSS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBnZXREYXRhKGxvY2F0aW9uKSB7XG4gIGNvbnN0IHVybCA9IGBodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj9xPSR7bG9jYXRpb259JnVuaXRzPW1ldHJpYyZBUFBJRD04MGI1ZTM0OTQwZDVkNjQ3YzY3MTc1M2I2ODUzMTRhN2A7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgbW9kZTogJ2NvcnMnXG4gIH0pXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coZGF0YSlcbiAgICBjb25zb2xlLmxvZyhwcm9jZXNzRGF0YShkYXRhKSlcbiAgICBkaXNwbGF5KHByb2Nlc3NEYXRhKGRhdGEpKVxuICB9IGNhdGNoIHtcbiAgICBoYW5kbGVFcnJvcihkYXRhKVxuICB9XG59XG5cbmZ1bmN0aW9uIHByb2Nlc3NEYXRhKGRhdGEpIHtcbiAgY29uc3QgbmFtZSA9IGRhdGEubmFtZVxuICBjb25zdCBjb3VudHJ5ID0gZGF0YS5zeXMuY291bnRyeVxuICBjb25zdCB3ZWF0aGVyID0gZGF0YS53ZWF0aGVyWzBdLmRlc2NyaXB0aW9uXG4gIGNvbnN0IHRlbXAgPSBgJHtkYXRhLm1haW4udGVtcH1DYFxuICBjb25zdCBodW1pZGl0eSA9IGAke2RhdGEubWFpbi5odW1pZGl0eX0lYFxuICBjb25zdCBtaW5UZW1wID0gYCR7ZGF0YS5tYWluLnRlbXBfbWlufUNgXG4gIGNvbnN0IG1heFRlbXAgPSBgJHtkYXRhLm1haW4udGVtcF9tYXh9Q2BcbiAgY29uc3Qgd2luZFNwZWVkID0gYCR7ZGF0YS53aW5kLnNwZWVkfShNL1MpYFxuICBjb25zdCBjbG91ZHMgPSBgJHtkYXRhLmNsb3Vkcy5hbGx9JWBcbiAgbGV0IHZpc2liaWxpdHkgPSBgJHtkYXRhLnZpc2liaWxpdHl9KEsvTSlgXG4gIGxldCByYWluID0gJy0nXG4gIGxldCBzbm93ID0gJy0nXG5cbiAgY29uc3QgbG9jYWxUaW1lID0gY29udmVydFRvTG9jYWxUaW1lKGRhdGEudGltZXpvbmUpXG4gIGNvbnN0IHN1bnJpc2UgPSBjb252ZXJ0VG9Mb2NhbFRpbWUoZGF0YS50aW1lem9uZSwgZGF0YS5zeXMuc3VucmlzZSlcbiAgY29uc3Qgc3Vuc2V0ID0gY29udmVydFRvTG9jYWxUaW1lKGRhdGEudGltZXpvbmUsIGRhdGEuc3lzLnN1bnNldClcblxuICBpZihkYXRhLnZpc2liaWxpdHkgPT09IDEwMDAwKSB7XG4gICAgdmlzaWJpbGl0eSA9ICdnb29kJ1xuICB9XG5cbiAgaWYoZGF0YS5zbm93KSBzbm93ID0gZGF0YS5zbm93WycxaCddO1xuICBpZihkYXRhLnJhaW4pIHJhaW4gPSBkYXRhLnJhaW5bJzFoJ107XG4gIHJldHVybiB7bmFtZSwgY291bnRyeSwgbG9jYWxUaW1lLCBzdW5yaXNlLCBzdW5zZXQsIHdlYXRoZXIsIHRlbXAsIGh1bWlkaXR5LCBtaW5UZW1wLCBtYXhUZW1wLCB2aXNpYmlsaXR5LCB3aW5kU3BlZWQsIGNsb3VkcywgcmFpbiwgc25vd31cbn1cblxuZnVuY3Rpb24gZGlzcGxheShkYXRhT2JqZWN0KSB7XG4gIGNvbnN0IG5hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmFtZScpXG4gIGNvbnN0IGxvY2FsVGltZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2NhbFRpbWUnKVxuICBjb25zdCBzdW5yaXNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1bnJpc2UnKVxuICBjb25zdCBzdW5zZXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3Vuc2V0JylcbiAgY29uc3Qgd2VhdGhlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3ZWF0aGVyJylcbiAgY29uc3QgdGVtcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0ZW1wJylcbiAgY29uc3QgaHVtaWRpdHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaHVtaWRpdHknKVxuICBjb25zdCBtaW5UZW1wID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21pblRlbXAnKVxuICBjb25zdCBtYXhUZW1wID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21heFRlbXAnKVxuICBjb25zdCB2aXNpYmlsaXR5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Zpc2liaWxpdHknKVxuICBjb25zdCB3aW5kU3BlZWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2luZFNwZWVkJylcbiAgY29uc3QgY2xvdWRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nsb3VkcycpXG4gIGNvbnN0IHJhaW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmFpbicpXG4gIGNvbnN0IHNub3cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc25vdycpXG5cbiAgbmFtZS50ZXh0Q29udGVudCA9IGBDaXR5IE5hbWU6ICR7ZGF0YU9iamVjdC5uYW1lfSAoJHtkYXRhT2JqZWN0LmNvdW50cnl9KWBcbiAgbG9jYWxUaW1lLnRleHRDb250ZW50ID0gYExvY2FsIFRpbWU6ICR7ZGF0YU9iamVjdC5sb2NhbFRpbWV9YFxuICBzdW5yaXNlLnRleHRDb250ZW50ID0gYFN1bnJpc2U6ICR7ZGF0YU9iamVjdC5zdW5yaXNlfWBcbiAgc3Vuc2V0LnRleHRDb250ZW50ID0gYFN1bnNldDogJHtkYXRhT2JqZWN0LnN1bnNldH1gXG4gIHdlYXRoZXIudGV4dENvbnRlbnQgPSBgV2VhdGhlcjogJHtkYXRhT2JqZWN0LndlYXRoZXJ9YFxuICB0ZW1wLnRleHRDb250ZW50ID0gYFRlbXBlcmF0dXJlOiAke2RhdGFPYmplY3QudGVtcH1gXG4gIG1heFRlbXAudGV4dENvbnRlbnQgPSBgSGlnaGVzdDogJHtkYXRhT2JqZWN0Lm1heFRlbXB9YFxuICBtaW5UZW1wLnRleHRDb250ZW50ID0gYExvd2VzdDogJHtkYXRhT2JqZWN0Lm1pblRlbXB9YFxuICBodW1pZGl0eS50ZXh0Q29udGVudCA9IGBIdW1pZGl0eTogJHtkYXRhT2JqZWN0Lmh1bWlkaXR5fWBcbiAgdmlzaWJpbGl0eS50ZXh0Q29udGVudCA9IGBWaXNpYmlsaXR5OiAke2RhdGFPYmplY3QudmlzaWJpbGl0eX1gXG4gIHdpbmRTcGVlZC50ZXh0Q29udGVudCA9IGBXaW5kIFNwZWVkOiAke2RhdGFPYmplY3Qud2luZFNwZWVkfWBcbiAgY2xvdWRzLnRleHRDb250ZW50ID0gYENsb3VkczogJHtkYXRhT2JqZWN0LmNsb3Vkc31gXG4gIHJhaW4udGV4dENvbnRlbnQgPSBgUmFpbjogJHtkYXRhT2JqZWN0LnJhaW59YFxuICBzbm93LnRleHRDb250ZW50ID0gYFNub3c6ICR7ZGF0YU9iamVjdC5zbm93fWBcbn1cblxuZnVuY3Rpb24gY29udmVydFRvTG9jYWxUaW1lKHRpbWV6b25lLCB0aW1lKSB7XG4gIGxldCBsb2NhbFRpbWVcbiAgaWYodGltZSkgbG9jYWxUaW1lID0gbmV3IERhdGUodGltZSAqIDEwMDApLmdldFRpbWUoKVxuICBlbHNlIGxvY2FsVGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpXG5cbiAgY29uc3QgbG9jYWxPZmZzZXQgPSBuZXcgRGF0ZSgpLmdldFRpbWV6b25lT2Zmc2V0KCkgKiA2MDAwMFxuICBjb25zdCBjdXJyZW50VXRjVGltZSA9IGxvY2FsT2Zmc2V0ICsgbG9jYWxUaW1lXG4gIGNvbnN0IGNpdHlPZmZzZXQgPSBjdXJyZW50VXRjVGltZSArIDEwMDAgKiB0aW1lem9uZVxuXG4gIGNvbnN0IGNpdHlUaW1lID0gbmV3IERhdGUoY2l0eU9mZnNldClcbiAgY29uc3QgaG91cnMgPSBgMCR7Y2l0eVRpbWUuZ2V0SG91cnMoKX1gXG4gIGNvbnN0IG1pbnV0ZXMgPSBgMCR7Y2l0eVRpbWUuZ2V0TWludXRlcygpfWBcbiAgcmV0dXJuIGAke2hvdXJzLnNsaWNlKC0yKX06JHttaW51dGVzLnNsaWNlKC0yKX1gXG59XG5cbmZ1bmN0aW9uIGhhbmRsZUVycm9yKGRhdGEpIHtcbiAgY29uc29sZS5sb2coYEVycm9yOiAke2RhdGEubWVzc2FnZX1gKTtcbn0iLCJpbXBvcnQgZ2V0RGF0YSBmcm9tIFwiLi9zY3JpcHRzL0FQSVwiO1xuXG5nZXREYXRhKCd1a3JhaW5lJyk7XG5cbmNvbnN0IGdpdmVuTG9jYXRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9jYXRpb24nKVxuY29uc3Qgc2VhcmNoTG9jYXRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VhcmNoJylcblxuc2VhcmNoTG9jYXRpb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGdldERhdGEoZ2l2ZW5Mb2NhdGlvbi52YWx1ZSlcbn0pIl0sIm5hbWVzIjpbImFzeW5jIiwiZ2V0RGF0YSIsImxvY2F0aW9uIiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1vZGUiLCJkYXRhIiwianNvbiIsImNvbnNvbGUiLCJsb2ciLCJwcm9jZXNzRGF0YSIsImRhdGFPYmplY3QiLCJuYW1lIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImxvY2FsVGltZSIsInN1bnJpc2UiLCJzdW5zZXQiLCJ3ZWF0aGVyIiwidGVtcCIsImh1bWlkaXR5IiwibWluVGVtcCIsIm1heFRlbXAiLCJ2aXNpYmlsaXR5Iiwid2luZFNwZWVkIiwiY2xvdWRzIiwicmFpbiIsInNub3ciLCJ0ZXh0Q29udGVudCIsImNvdW50cnkiLCJkaXNwbGF5IiwibWVzc2FnZSIsImhhbmRsZUVycm9yIiwic3lzIiwiZGVzY3JpcHRpb24iLCJtYWluIiwidGVtcF9taW4iLCJ0ZW1wX21heCIsIndpbmQiLCJzcGVlZCIsImFsbCIsImNvbnZlcnRUb0xvY2FsVGltZSIsInRpbWV6b25lIiwidGltZSIsIkRhdGUiLCJnZXRUaW1lIiwibG9jYWxPZmZzZXQiLCJnZXRUaW1lem9uZU9mZnNldCIsImNpdHlUaW1lIiwiaG91cnMiLCJnZXRIb3VycyIsIm1pbnV0ZXMiLCJnZXRNaW51dGVzIiwic2xpY2UiLCJnaXZlbkxvY2F0aW9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==